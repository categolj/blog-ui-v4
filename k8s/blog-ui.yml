kind: Service
apiVersion: v1
metadata:
  name: blog-ui-service
  namespace: blog
  labels:
    app: blog-ui
  annotations:
    spring.cloud.gateway/routes: |
      predicates:
      - Host=blog.ik.am
      filters:
      - name: Hystrix
        args:
          name: blog/blog-ui
          fallbackUri: forward:/error/503
      - SecureHeaders
      - name: Retry
        args:
          retries: 3
          statuses: BAD_GATEWAY
spec:
  selector:
    app: blog-ui
  ports:
  - protocol: TCP
    port: 8080
    nodePort: 30082
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: blog-ui
  namespace: blog
  labels:
    app: blog-ui
spec:
  replicas: 2
  revisionHistoryLimit: 4
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: blog-ui
      annotations:
        kubernetes.io/change-cause: "Update gateway annotations"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: /actuator/prometheus
    spec:
      containers:
      - name: blog-ui
        image: asia.gcr.io/fe-tmaki/blog-ui:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SERVER_PORT
          value: "8080"
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        - name: _JAVA_OPTIONS
          value: "-Duser.timezone=Asia/Tokyo -Duser.language=en -Dinfo.docker.digest=INFO_DOCKER_DIGEST"
        - name: SPRING_SECURITY_USER_NAME
          valueFrom:
            secretKeyRef:
              name: blog-config-secret
              key: ops-username
        - name: SPRING_SECURITY_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: blog-config-secret
              key: ops-password
        volumeMounts:
        - name: tmp
          mountPath: /home/vcap/tmp
        resources:
          limits:
            memory: "400Mi"
          requests:
            memory: "400Mi"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 180
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 3
      affinity:
         podAntiAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
             - labelSelector:
                 matchExpressions:
                   - key: "app"
                     operator: In
                     values:
                     - blog-ui
               topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: tmp
        emptyDir: {}
